LRI: THEORY
 BEGIN

  IMPORTING constants

  Mode: TYPE = { LRI, ASed }

  state: TYPE = [#
    time: real,
    mode: Mode
  #]

  init_LRI: state = (# time := 0, mode := LRI #)  

  per_APout(st: state): boolean = mode(st) = LRI AND time(st) >= TLRI-TAVI
  APout(st: (per_APout)): state = (# time := 0, mode := LRI #)

  per_VSin(st: state): boolean = true
  VSin(st: (per_VSin)): state = (# time := 0, mode := LRI #)

  per_VPin(st: state): boolean = true
  VPin(st: (per_VPin)): state = (# time := 0, mode := LRI #)

  per_ASin(st: state): bool = mode(st) = LRI
  ASin(st: (per_ASin)): state = st WITH [ mode := ASed ]

  per_tick(st: state): bool = false
  tick(st: state): state = st
  
  advance_time(st: state): state = st WITH [ time := time(st) + 1 ]  


 END LRI
