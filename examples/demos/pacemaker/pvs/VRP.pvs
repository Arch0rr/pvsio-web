VRP: THEORY
 BEGIN

  IMPORTING constants

  Mode: TYPE = { Idle, inter, VRP }

  state: TYPE = [#
    time: real,
    mode: Mode
  #]

  init_VRP: state = (# time := 0, mode := Idle #)  

  per_Vgetin(st: state): boolean = mode(st) = Idle
  Vgetin(st: (per_Vgetin)): state = st WITH [ mode := inter ]

  per_VPin(st: state): boolean = mode(st) = Idle
  VPin(st: (per_VPin)): state = st WITH [ time := 0, mode := VRP ]

  per_tick(st: state): boolean = mode(st) = VRP AND time(st) >= TVRP
  tick(st: (per_tick)): state = st WITH [ mode := Idle ]

  per_VSout(st: state): boolean = mode(st) = inter
  VSout(st: (per_VSout)): state = st WITH [ time := 0, mode := VRP ]

  advance_time(st: state): state = st WITH [ time := time(st) + 1 ]


 END VRP
